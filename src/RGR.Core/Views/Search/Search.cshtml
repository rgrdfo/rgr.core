
@using RGR.Core.Common.Enums;
@using RGR.Core.Views.Helpers;

@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Html;
@using System.Text;

@{
    ViewData["Title"] = "Результаты поиска";
}

@{
    var objects = SearchResult.Deserialize((string)ViewData["Result"]);
}


<head>

    <style>
        .sticky {
            position: absolute;
        }

    </style>

    <script src="https://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>
    
    <script type="text/javascript">
        ymaps.ready(init);
        var myMap,
            myPlacemark;

        function init() {
            myMap = new ymaps.Map("search-result-map", {
                center: [48.48888324, 135.08322577],
                zoom: 14
            });    
        }

        function drawPlacemark(latitude, longitude, address) {
            myMap.geoObjects.removeAll();
            var myPlacemark = new ymaps.Placemark([latitude, longitude], {
                balloonContent: address,
                hideIconOnBalloonOpen: false,
                style: "default#bluePoint"
            });
            myMap.geoObjects.add(myPlacemark);   
            myMap.center = [latitude, longitude];
            myMap.panTo([myMap.center], { fluing: 1 });
        }        

    </script>
   
    <script type="text/javascript">
        $(document).ready(function () {
            var offset = $('#search-result-map').offset();
            var topPadding = 0;
            $(window).scroll(function () {
                if ($(window).scrollTop() > offset.top) {
                    $('#search-result-map').stop().animate({ marginTop: $(window).scrollTop() - offset.top + topPadding });
                }
                else {
                    $('#search-result-map').stop().animate({ marginTop: 0 });
                }
            });
        });
    </script>
   
    @{ 
        var orderingField = (ViewData.ContainsKey("OrderBy")) ? ViewData["OrderBy"] : "Price";
    }

    <link rel="stylesheet" href="~/js/quickbox/qb/qb.css">
    <script type="text/javascript" src="~/js/quickbox/qb/js/qb.js"></script>
</head>

<div class="search-bar">
    @SearchBar.Render()
</div>

<div class="content-inner">
    <div id="result-search">
        <h4>Показать: </h4>
        <ul id="search-objects-tabs" class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#searchType1">На карте</a></li>
            <li><a data-toggle="tab" href="#searchType2">Список</a></li>
        </ul>        
        <div class="tab-content">
            <div id="searchType1" class="tab-pane  in active">
                <div class="sort-select">
                    <h4>Сортировать: </h4> 
                    <select class="dropdown">
                        <option>по дате добавления</option>
                         @*<a href="http://@ViewData["Uri"]&order =Date"/>*@
                        <option>по цене (дешевле)</option>
                        <option>по цене (дороже)</option>
                        <option>по кол-ву комнат (по возрастанию)</option>
                        <option>по общей площади (по убыванию)</option>
                    </select>
                </div>
                <div class="search-result-row-md">
                    @await Component.InvokeAsync("SearchResultMap", new { Result = objects, OrderingField = orderingField })
                </div>
                <div class="search-result-row-md" style="padding:10px;">
                    <div class="sticky" id="search-result-map"></div>
                </div>
            </div>
            <div id="searchType2" class="tab-pane">
                <div class="search-result-box">
                    @SearchResult.HeadResult((EstateTypes)ViewData["Type"], (string)ViewData["Uri"])
                    @await Component.InvokeAsync("SearchResultRenderer", new { Result = objects, Type = ViewData["Type"], OrderingField = orderingField })
                </div>
            </div>
        </div>
    </div>
</div>





