
@using RGR.Core.Controllers.Enums;
@using RGR.Core.Controllers;
@using RGR.Core.Views.Helpers;

@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Html;
@using System.Text;

@{
    ViewData["Title"] = "Результаты поиска";
}
@functions {
            public static HtmlString SortResult(string Source, EstateTypes EstateType)
            {
                var sb = new StringBuilder("<div id=\"bodyResult\">");
                //List<String> adresses = new List<string>();            
                switch (EstateType)
                {
                    case EstateTypes.Flat:
                        var flats = JsonConvert.DeserializeObject<IEnumerable<FlatPassport>>(Source);
                        //foreach (var flat in flats)
                        //{
                        //    adresses.Add(flat.Address);
                        //}
                        //adresses.Sort();
                        flats = flats.OrderBy(f => f.Address);
                        foreach (var flat in flats)
                        {
                            sb.Append(SearchResult.CommonStart(flat));
                            sb.Append($"<div class=\"col-lg-2\"><h1>{flat.Rooms}-комнатная</h1><br/>{flat.HouseMaterial}<br/>{flat.HouseType}</div>");
                            sb.Append($"<div class=\"col-lg-1\"><h1>{flat.Square} кв.м.</h1><br />кухня {flat.KitchenSquare}<br />жилая {flat.LivingSquare}</div>");
                            sb.Append($"<div class=\"col-lg-1\"><h1>{flat.Floor} этаж из {flat.FloorCount}</h1><br />{flat.Balcony}<br />{flat.Description}</div>");
                            sb.Append(SearchResult.CommonEnd(flat));

                            //aF = adresses.ElementAt(adresses.BinarySearch(adressFlat));
                            //foreach (var flat in flats)
                            //{
                            //    if(aF==flat.Address)
                            //    {
                            //        sb.Append(CommonStart(flat));
                            //        sb.Append($"<div class=\"col-lg-2\"><h1>{flat.Rooms}-комнатная</h1><br/>{flat.HouseMaterial}<br/>{flat.HouseType}</div>");
                            //        sb.Append($"<div class=\"col-lg-1\"><h1>{flat.Square} кв.м.</h1><br />кухня {flat.KitchenSquare}<br />жилая {flat.LivingSquare}</div>");
                            //        sb.Append($"<div class=\"col-lg-1\"><h1>{flat.Floor} этаж из {flat.FloorCount}</h1><br />{flat.Balcony}<br />{flat.Description}</div>");
                            //        sb.Append(CommonEnd(flat));
                            //    }
                            //}
                        }
                        break;
                }
                return new HtmlString((sb.ToString()));
            }
        }    


<head>
    <script src="https://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>
    <!--<script src="~/js/map.js" type="text/javascript"></script>-->
    <script type="text/javascript">
        ymaps.ready(init);
        var myMap,
            myPlacemark;

        function init()
        {
            myMap = new ymaps.Map("map", {
                center: [48.48888324, 135.08322577],
                zoom: 12
            });

            myPlacemark = new ymaps.Placemark([48.48888324, 135.08322577], {
                hintContent: 'РГР ДФО',
                balloonContent: 'ул. Карла Маркса, 65-102А'
            });

            myMap.geoObjects.add(myPlacemark);
        }

        function findLocation(str)
    {
        var geocoder = ymaps.geocode(str);
        geocoder.Then(
            function (res) {
            map.geoObjects.add(res.geoObjects)
                    throw (":)");
        },
                function (err) {
            throw ":(";
        }
                );
    }
    </script>
</head>

<div class="search-result">
    <!--Отладочная информация, убрать к релизу-->
    <font size="1">@ViewData["Timer"] </font> <br /> <br />

    @*<a href='@url.action("saverequest", "search")'> сохранить запрос </a>*@
    <form action="saveRequest">
        <input name="query" value="@Context.Request.QueryString.ToString()" hidden="hidden" />
        <input type="submit" value="Сохранить запрос" />
    </form>    
    <div class="search-result-box">
        @SearchResult.HeadResult((EstateTypes)ViewData["Type"])
        @SearchResult.Render((string)ViewData["Result"], (EstateTypes)ViewData["Type"])
        <!--<div id="map" style="width: 400px; height: 400px; border:1px solid black; position: absolute; top:0; left:560px"></div>-->
    </div>
</div>
    



<script type="text/javascript">
    var map = new ymaps.Map("map", {
            center: [55.76, 37.64],
            zoom: 10
    });
</script>